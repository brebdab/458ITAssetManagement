# Generated by Django 3.0.2 on 2020-02-15 04:33

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import rackcity.models.asset
import rackcity.models.fields.rackcity_model_fields
import rackcity.models.it_model
import rackcity.models.rack


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=150, unique=True, validators=[rackcity.models.asset.validate_hostname])),
                ('elevation', models.PositiveIntegerField()),
                ('owner', models.CharField(blank=True, max_length=150, null=True, validators=[rackcity.models.asset.validate_owner])),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'asset',
                'ordering': ['hostname'],
            },
        ),
        migrations.CreateModel(
            name='Datacenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbreviation', models.CharField(max_length=6, unique=True)),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ITModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor', models.CharField(max_length=150)),
                ('model_number', models.CharField(max_length=150)),
                ('height', models.PositiveIntegerField()),
                ('display_color', models.CharField(default='#394B59', max_length=7, validators=[rackcity.models.it_model.validate_display_color])),
                ('network_ports', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=150), blank=True, null=True, size=None)),
                ('num_power_ports', rackcity.models.fields.rackcity_model_fields.RCPositiveIntegerField(blank=True, null=True)),
                ('cpu', models.CharField(blank=True, max_length=150, null=True)),
                ('memory_gb', rackcity.models.fields.rackcity_model_fields.RCPositiveIntegerField(blank=True, null=True)),
                ('storage', models.CharField(blank=True, max_length=150, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'model',
                'ordering': ['vendor', 'model_number'],
            },
        ),
        migrations.CreateModel(
            name='Rack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_letter', models.CharField(max_length=1, validators=[rackcity.models.rack.validate_row_letter])),
                ('rack_num', models.PositiveIntegerField()),
                ('height', models.PositiveIntegerField(default=42)),
                ('datacenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rackcity.Datacenter', verbose_name='datacenter')),
            ],
            options={
                'ordering': ['datacenter', 'row_letter', 'rack_num'],
            },
        ),
        migrations.AddConstraint(
            model_name='itmodel',
            constraint=models.UniqueConstraint(fields=('vendor', 'model_number'), name='unique vendor model number'),
        ),
        migrations.AddField(
            model_name='asset',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rackcity.ITModel', verbose_name='related model'),
        ),
        migrations.AddField(
            model_name='asset',
            name='rack',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rackcity.Rack', verbose_name='related rack'),
        ),
        migrations.AddConstraint(
            model_name='rack',
            constraint=models.UniqueConstraint(fields=('datacenter', 'row_letter', 'rack_num'), name='unique rack letter and number per datacenter'),
        ),
    ]
